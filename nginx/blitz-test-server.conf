# =============================================================================
# Blitz Test Server - Nginx Reverse Proxy Configuration
# =============================================================================
# Production nginx configuration for single-server deployment
#
# Installation:
# 1. Copy this file to /etc/nginx/sites-available/blitz-test-server.conf
# 2. Update server_name with your domain
# 3. Configure SSL certificates (uncomment TLS section)
# 4. Create symlink: sudo ln -s /etc/nginx/sites-available/blitz-test-server.conf /etc/nginx/sites-enabled/
# 5. Test config: sudo nginx -t
# 6. Reload nginx: sudo systemctl reload nginx
# =============================================================================

# Upstream configuration for Gunicorn
upstream blitz_test_server {
    # Gunicorn server running on localhost:8000
    server 127.0.0.1:8000 fail_timeout=0;
    
    # For multiple Gunicorn workers on different ports, add:
    # server 127.0.0.1:8001 fail_timeout=0;
    # server 127.0.0.1:8002 fail_timeout=0;
    
    # Connection keepalive
    keepalive 32;
}

# =============================================================================
# Rate Limiting Configuration
# =============================================================================
# Define rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/m;
limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=general:10m rate=30r/m;

# =============================================================================
# Main Server Configuration
# =============================================================================
server {
    listen 80;
    listen [::]:80;
    
    # CHANGE THIS to your actual domain name
    server_name your-domain.com www.your-domain.com;
    
    # =============================================================================
    # TLS/SSL Configuration (UNCOMMENT WHEN READY)
    # =============================================================================
    # Redirect HTTP to HTTPS
    # return 301 https://$server_name$request_uri;
}

# HTTPS Server Configuration (UNCOMMENT AND CONFIGURE WHEN READY)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     
#     server_name your-domain.com www.your-domain.com;
#     
#     # =============================================================================
#     # SSL Certificate Configuration
#     # =============================================================================
#     # UPDATE THESE PATHS to your actual certificate files
#     ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
#     
#     # SSL Security Configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
#     ssl_prefer_server_ciphers on;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     
#     # HSTS (HTTP Strict Transport Security)
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # =============================================================================
    # Basic Security Headers
    # =============================================================================
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header Referrer-Policy "no-referrer" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    
    # Content Security Policy (aligned with app's SECURITY_CSP)
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' cdn.jsdelivr.net; img-src 'self' data:; font-src 'self' cdn.jsdelivr.net" always;

    # =============================================================================
    # Compression and Performance
    # =============================================================================
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        text/css
        text/javascript
        text/xml
        text/plain;

    # =============================================================================
    # Health Check Endpoints (No Authentication Required)
    # =============================================================================
    # Basic health check
    location /healthz {
        proxy_pass http://blitz_test_server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Quick timeouts for health checks
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        
        # Don't log health checks
        access_log off;
    }

    # Liveness check
    location /livez {
        proxy_pass http://blitz_test_server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Quick timeouts for health checks
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        
        # Don't log health checks
        access_log off;
    }

    # Readiness check
    location /readyz {
        proxy_pass http://blitz_test_server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Quick timeouts for health checks
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        
        # Don't log health checks
        access_log off;
    }

    # =============================================================================
    # Metrics Endpoint (Optional - Requires Authentication)
    # =============================================================================
    location /metrics {
        # Optional: Restrict access to monitoring systems
        # allow 10.0.0.0/8;     # Internal network
        # allow 172.16.0.0/12;  # Internal network
        # allow 192.168.0.0/16; # Internal network
        # deny all;
        
        proxy_pass http://blitz_test_server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Reasonable timeouts for metrics
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 30s;
    }

    # =============================================================================
    # API Endpoints (Rate Limited)
    # =============================================================================
    location ~ ^/api/(start|stop|recover) {
        # Rate limiting for bot control endpoints
        limit_req zone=api burst=5 nodelay;
        
        proxy_pass http://blitz_test_server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Longer timeouts for trading operations
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 60s;
    }

    # Authentication endpoints
    location ~ ^/(login|register|forgot_password) {
        # Rate limiting for auth endpoints
        limit_req zone=auth burst=3 nodelay;
        
        proxy_pass http://blitz_test_server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Standard timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 30s;
    }

    # =============================================================================
    # Static Files (if served by nginx)
    # =============================================================================
    location /static/ {
        # UNCOMMENT AND UPDATE if serving static files via nginx
        # alias /home/blitzbot/blitz-test-server/static/;
        # expires 1y;
        # add_header Cache-Control "public, immutable";
        
        # For now, proxy to Flask app
        proxy_pass http://blitz_test_server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # =============================================================================
    # Main Application (Default Location)
    # =============================================================================
    location / {
        # General rate limiting
        limit_req zone=general burst=10 nodelay;
        
        proxy_pass http://blitz_test_server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Standard proxy timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 60s;
        
        # WebSocket support (if needed)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }

    # =============================================================================
    # Error Pages
    # =============================================================================
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    # Custom error page locations
    location = /404.html {
        internal;
    }
    
    location = /50x.html {
        internal;
    }

    # =============================================================================
    # Logging Configuration
    # =============================================================================
    # Custom log format with timing information
    log_format blitz_access '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" '
                           'rt=$request_time uct="$upstream_connect_time" '
                           'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/blitz-test-server-access.log blitz_access;
    error_log /var/log/nginx/blitz-test-server-error.log warn;
}

# =============================================================================
# WebSocket Upgrade Configuration
# =============================================================================
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# =============================================================================
# Additional Security Configuration
# =============================================================================
# Hide nginx version
server_tokens off;

# =============================================================================
# Monitoring and Logging Recommendations
# =============================================================================
# 1. Set up log rotation:
#    Create /etc/logrotate.d/nginx-blitz-test-server
#
# 2. Monitor nginx metrics:
#    Consider nginx-prometheus-exporter for monitoring
#
# 3. Set up alerting for:
#    - High error rates (5xx responses)
#    - High response times
#    - Rate limiting triggers
#
# 4. Regular security updates:
#    Keep nginx updated and monitor security advisories